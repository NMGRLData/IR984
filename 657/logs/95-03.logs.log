do run
loading script "jan_co2_whiff_400_120_large.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=543.96, duration=0.000227928161621
script duration name:co2_whiff_400_120_large seconds:544.0
loading script "jan_co2_whiff_400_120_large.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=1.78813934326e-05
loading script "jan_co2_whiff_400_120_large.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.19616699219e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.00014591217041
executed snippet estimated_duration=0.0, duration=0.0025520324707
script duration name:co2 seconds:0.0
loading script "jan_co2_whiff_400_120_large.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.00012993812561
executed snippet estimated_duration=4.0, duration=0.00115299224854
Script duration 544.0
Run total estimated duration= 545.000
run duration: 0:09:05
doing event level: 2
08:14:06 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
create new session 4957035120
close session 4957035120
$$$$$ Clearing conditionals
adding conditionals kevin
extract conditionals from file. /Users/jan/PychronDev/scripts/conditionals/kevin.yaml
no attr for this modification cd={'extraction_str': '', 'attr': '', 'mapper': '', 'use_termination': False, 'start_count': 0, 'nskip': 0, 'window': 0, 'frequency': 1, 'teststr': '', 'action': 'Skip Next Run', 'ntrips': 1, 'use_truncation': False}
no attr for this cancelation cd={'mapper': '', 'window': 0, 'frequency': 1, 'attr': '', 'teststr': '', 'start_count': 0, 'ntrips': 1}
adding truncation attr="Ar40" test="Ar40>5000.0" start="5"
adding truncation attr="age" test="age>70.0" start="40"
adding truncation attr="Ar39" test="Ar39.bs_corrected<0.3" start="30"
adding truncation attr="Ar40" test="Ar40.bs_corrected>2000.0" start="20"
no attr for this termination cd={'mapper': '', 'window': 0, 'frequency': 1, 'attr': '', 'teststr': '', 'start_count': 0, 'ntrips': 1}
Invalid conditional kind="pre_run_terminations"
no attr for this action cd={'mapper': '', 'attr': '', 'start_count': 0, 'window': 0, 'frequency': 1, 'teststr': '', 'action': None, 'ntrips': 1}
Invalid conditional kind="post_run_terminations"
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run 65795-03
loading script "jan_co2_whiff_400_120_large.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run 65795-03
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
08:14:06 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.09149,0.11966,0.00155,-0.02079,-0.02749,0.00178
08:14:06 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
08:14:06 -- ******* Pre Extraction Check Passed *******
=================================================================================
08:14:06 -- stopping status monitor
stop 4935480816
Status monitor stopped
Status monitor finished
08:14:07 -- starting status monitor
start 4935480816
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 08:14:09.440363
Extraction Started jan_co2.py
08:14:09 -- ******* Extraction Started jan_co2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x129edc950>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.91278076172e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.10758972168e-05
executed snippet estimated_duration=100.0, duration=0.00254917144775
Jan CO2 laser analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.6968460083e-05
Waiting for CO2 access
wait ('FelixCO2Flag', 0) {}
waiting for FelixCO2Flag = 0
Read FelixCO2Flag ===>> 0
finished waiting
CO2 free
wait ('CO2PumpTimeFlag', 0) {}
waiting for CO2PumpTimeFlag = 0
Read CO2PumpTimeFlag ===>> 0
finished waiting
acquire ('JanCO2Flag',) {'clear': True}
acquire JanCO2Flag
Set JanCO2Flag 1 ===>> OK
JanCO2Flag acquired
set extraction state False (0.75, 'red', 1.5)
CO2 acquired
executed snippet estimated_duration=0, duration=0.0167629718781
WaitForCO2Access.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000118017196655
Prepare for CO2 analysis
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=4
08:14:09 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=4
08:14:10 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=4
08:14:11 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=4
08:14:11 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=4
08:14:12 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=4
08:14:12 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=4
08:14:13 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'CO2 Laser to Felix'}
close name=--- desc=CO2 Laser to Felix
checking ownership. requestor=129.138.12.150
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Felix) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Felix) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=4
08:14:13 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=4
08:14:14 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=5.05049705505
PrepareForCO2Analysis.py completed successfully
gosub finished
set_motor ('beam', '1.25') {}
setting motor "beam" to 1.25
set motor beam to 1.25
SetMotor beam,1.25 ===>> OK
GetMotorMoving beam ===>> False
GetMotorMoving beam ===>> False
Block completed
move_to_position ('4',) {'autocenter': True}
FusionsCO2 move to position 4
sending GoToHole 4,True
GoToHole 4,True ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> False
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> False
Block completed
GetAutoCorrecting ===>> False
GetAutoCorrecting ===>> False
Block completed
update position
GetPosition ===>> 1.99390,15.95120,1.00000
got position (1.9939, 15.9512, 1.0)
move to position succeeded
sleep (5,) {}
SLEEP 5.0
block started
WaitControl setup for 5.0  
Join finished
block finished. duration 5.04163193703
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=4
08:14:24 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
enable laser
enable () {}
set extraction state FusionsCO2 Enabled (False, 'red', 1.5)
enabling laser
Enable ===>> OK
begin interval
BEGIN INTERVAL Interval 1 waiting for 30.0
block started
set extract to 4.5
WaitControl setup for 30.0  
extract (4.5,) {}
GetPosition ===>> 1.99390,15.95120,1.00000
set extraction state FusionsCO2 ON! 4.5(watts) (0.75, 'red', 1.5)
extract sample to 4.5 (watts)
set laser output
SetLaserOutput 4.5,watts ===>> OK
executing pattern triangle.lp
execute_pattern ('triangle.lp',) {}
executing pattern triangle.lp
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> False
IsPatterning ===>> False
Block completed
COMPLETE INTERVAL waiting for Interval 1 to complete
Join finished
block finished. duration 30.0615799427
Interval 1 finished
end_extract () {}
ending extraction. set laser power to 0
set laser power 0
SetLaserPower 0 ===>> OK
disable () {}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
sleep (30.0,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
State checksums do not match. Local:1223320555 Remote:1281862853
State checksum failed
set states for children of O. state=False
handle state [('O', False)]
update switch state O False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
set states for children of O. state=True
handle state [('O', True)]
update switch state O True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
Join finished
block finished. duration 30.0706608295
executed snippet estimated_duration=166.0, duration=76.3117399216
jan_co2.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 4
not connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-08-28T08:07:32',
                    'title': 'iServer Hum.',
                    'value': 51.4}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-08-28T08:13:33',
                     'title': None,
                     'value': 110.925},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-08-28T08:13:34',
                     'title': None,
                     'value': 114.12388}],
 'lab_temperatures': [{'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-08-28T03:54:24',
                       'title': 'iServer Temp.',
                       'value': 71.0},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-08-28T08:03:41',
                       'title': None,
                       'value': 18.0}]}
Extraction Finished
08:15:28 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
08:15:28 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.035158395898
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     6.0541 5.8776 5.9914 6.1925 6.2289 6.6779
Ar39     6.0089 5.7686 6.0555 6.3357 6.1116 6.5644
Ar36     5.6865 5.4376 5.7189 5.9946 5.7666 6.2154
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.035158395898
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=65795 analysis type=unknown
Measurement Started jan_co2_whiff_400_120_large.py
08:15:28 -- ******* Measurement Started jan_co2_whiff_400_120_large.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09645
GetGain L1 ===>> 0.010309
GetGain L2 ===>> 0.091218
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 198.370811206739
GetParameter Source Current Readback ===>> 549.738570469389
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/67/1aa10b-c6af-4b5b-bd2f-24be68169a7f.h5
flush and close file /Users/jan/PychronDev/data/isotopes/67/1aa10b-c6af-4b5b-bd2f-24be68169a7f.h5
testing...
no interpolation path defined
executed snippet estimated_duration=543.96, duration=0.00028920173645
co2 whiff measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
setting previous blanks
 - setting Ar41 blank 0.0075+/-0.0034
 - setting Ar40 blank 0.430+/-0.008
 - setting Ar36 blank 0.00359+/-0.00016
 - setting Ar37 blank 0.044+/-0.005
 - setting Ar38 blank 0.0026+/-0.0024
 - setting Ar39 blank 0.015+/-0.010
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02821323e+00]
H1 map mass to dac 39.9624 >> 5.87762
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.87758538725) on H1
setting magnet DAC
current  : 5.877585
requested: 5.877585
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87758538725 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
close ('S',) {}
close name=S desc=---
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x1329822f0>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x13ce3bd10>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x13ce3b9b0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
Close S ===>> OK
GetIndicatorState S ===>> False
change switch state (True, True)
update switch state S False args=() kw={} ncanvase=4
08:15:30 -- CLOSE  VALVE-S (Microbone to Inlet Pipette)
-------------------------- close S () result=[(True, True)]
action=close, ok=True, locked=[False]
equilibrate () {'do_post_equilibration': False, 'inlet': 'R', 'outlet': 'O', 'eqtime': 4}
Equilibration Started
08:15:30 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=4
08:15:30 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=4
08:15:33 -- OPEN   VALVE-R (Jan Inlet)
equilibrating for 4sec
set_time_zero (0,) {}
sniff (4,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/67/1aa10b-c6af-4b5b-bd2f-24be68169a7f.h5
measuring sniff. ncounts=4
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
08:15:38 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
waiting for write to finish
measurement finished
estimated time: 4.194 actual time: :4.252
flush and close file /Users/jan/PychronDev/data/isotopes/67/1aa10b-c6af-4b5b-bd2f-24be68169a7f.h5
set_fits () {}
Close R ===>> OK
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal_linear.yaml
State checksums do not match. Local:-1252573911 Remote:-997610518
set "Ar41" to "('Average', 'SEM')"
State checksum failed
set "Ar40" to "('Linear', 'SEM')"
set "Ar36" to "('Linear', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Linear', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal_linear.yaml
set "H2" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
whiff () {'ncounts': 1, 'conditionals': [{'action': 'run_remainder', 'attr': 'Ar40', 'teststr': 'Ar40.cur<=175'}, {'action': 'run_pipette', 'attr': 'Ar40', 'teststr': 'Ar40.cur>500'}, {'action': 'run_chamber_split', 'attr': 'Ar40', 'teststr': 'Ar40.cur>=300'}, {'action': 'pump', 'attr': 'Ar40', 'teststr': 'Ar40.cur>175'}]}
build tables- whiff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /whiff/Ar41 (Group) '' table H2
add group /whiff/Ar40 (Group) '' table H1
add group /whiff/Ar39 (Group) '' table AX
GetIndicatorState R ===>> False
add group /whiff/Ar38 (Group) '' table L1
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=4
add group /whiff/Ar37 (Group) '' table L2
add group /whiff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/67/1aa10b-c6af-4b5b-bd2f-24be68169a7f.h5
measuring whiff. ncounts=1
08:15:38 -- CLOSE  VALVE-R (Jan Inlet)
"whiff" increment series count="2" fit count="1" regressing="True"
starting measurement
testing Ar40<=175
evaluate ot="Ar40.cur<=175" t="Ar40<=175", ctx="{'Ar40': 181.02188345515901}"
testing Ar40>500
evaluate ot="Ar40.cur>500" t="Ar40>500", ctx="{'Ar40': 181.02188345515901}"
testing Ar40>=300
evaluate ot="Ar40.cur>=300" t="Ar40>=300", ctx="{'Ar40': 181.02188345515901}"
testing Ar40>175
evaluate ot="Ar40.cur>175" t="Ar40>175", ctx="{'Ar40': 181.02188345515901}"
condition Ar40>175 is true trips=1/1
08:15:40 -- Conditional tripped: Ar40.cur>175 condition Ar40>175 is True
waiting for write to finish
measurement finished
estimated time: 1.049 actual time: :1.133
flush and close file /Users/jan/PychronDev/data/isotopes/67/1aa10b-c6af-4b5b-bd2f-24be68169a7f.h5
WHIFF Result=pump
Whiff result=pump
reset_measurement (('H2', 'H1', 'AX', 'L1', 'L2', 'CDD'),) {}
reset_data () {}
reset data
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/67/1aa10b-c6af-4b5b-bd2f-24be68169a7f.h5
flush and close file /Users/jan/PychronDev/data/isotopes/67/1aa10b-c6af-4b5b-bd2f-24be68169a7f.h5
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
clear isotope group
 - setting Ar41 blank (0, 0)
 - setting Ar40 blank (0, 0)
 - setting Ar36 blank (0, 0)
 - setting Ar37 blank (0, 0)
 - setting Ar38 blank (0, 0)
 - setting Ar39 blank (0, 0)
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
setting previous blanks
 - setting Ar41 blank 0.0075+/-0.0034
 - setting Ar40 blank 0.430+/-0.008
 - setting Ar36 blank 0.00359+/-0.00016
 - setting Ar37 blank 0.044+/-0.005
 - setting Ar38 blank 0.0026+/-0.0024
 - setting Ar39 blank 0.015+/-0.010
load analysis view
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
clear isotope group
 - setting Ar41 blank (0, 0)
 - setting Ar40 blank (0, 0)
 - setting Ar36 blank (0, 0)
 - setting Ar37 blank (0, 0)
 - setting Ar38 blank (0, 0)
 - setting Ar39 blank (0, 0)
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
setting previous blanks
 - setting Ar41 blank 0.0075+/-0.0034
 - setting Ar40 blank 0.430+/-0.008
 - setting Ar36 blank 0.00359+/-0.00016
 - setting Ar37 blank 0.044+/-0.005
 - setting Ar38 blank 0.0026+/-0.0024
 - setting Ar39 blank 0.015+/-0.010
load analysis view
open ('R',) {}
open name=R desc=---
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=4
08:15:40 -- OPEN   VALVE-R (Jan Inlet)
-------------------------- open R () result=[(True, True)]
action=open, ok=True, locked=[False]
open ('O',) {}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=4
08:15:41 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0205490589
close ('R',) {}
close name=R desc=---
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
set states for children of R. state=False
handle state [('R', False)]
update switch state R False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=4
08:15:57 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close R () result=[(True, True)]
action=close, ok=True, locked=[False]
open ('S',) {}
open name=S desc=---
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=4
08:15:58 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open S () result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (3,) {}
SLEEP 3.0
block started
WaitControl setup for 3.0  
Join finished
block finished. duration 3.00906610489
close ('T',) {}
close name=T desc=---
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close T ===>> OK
set states for children of T. state=False
handle state [('T', False)]
update switch state T False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
GetIndicatorState T ===>> False
change switch state (True, True)
update switch state T False args=() kw={} ncanvase=4
08:16:01 -- CLOSE  VALVE-T (Microbone to CO2 Laser)
-------------------------- close T () result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (3,) {}
SLEEP 3.0
block started
WaitControl setup for 3.0  
Join finished
block finished. duration 3.00693297386
equilibrate () {'do_post_equilibration': True, 'inlet': 'R', 'outlet': 'O', 'eqtime': 12.0}
Equilibration Started
08:16:05 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=4
08:16:05 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
checking ownership. requestor=129.138.144.15
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=4
08:16:08 -- OPEN   VALVE-R (Jan Inlet)
set_time_zero (0,) {}
sniff (12.0,) {}
py_sniff
equilibrating for 12.0sec
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/67/1aa10b-c6af-4b5b-bd2f-24be68169a7f.h5
measuring sniff. ncounts=12.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
set states for children of V. state=True
handle state [('V', True)]
update switch state V True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
Equilibration Finished
08:16:20 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
State checksums do not match. Local:500212738 Remote:1925443142
State checksum failed
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=4
08:16:21 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
08:16:21 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000159978866577
executed snippet estimated_duration=4.0, duration=0.00104308128357
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000148057937622
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
waiting for write to finish
measurement finished
estimated time: 12.583 actual time: :12.672
flush and close file /Users/jan/PychronDev/data/isotopes/67/1aa10b-c6af-4b5b-bd2f-24be68169a7f.h5
set_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal_linear.yaml
set "Ar41" to "('Average', 'SEM')"
set "Ar40" to "('Linear', 'SEM')"
set "Ar36" to "('Linear', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Linear', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal_linear.yaml
set "H2" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 400.0}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/Ar41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/67/1aa10b-c6af-4b5b-bd2f-24be68169a7f.h5
measuring signal. ncounts=400.0
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=4
08:16:21 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
"signal" increment series count="2" fit count="1" regressing="True"
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=4
08:16:22 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
starting measurement
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=4
08:16:23 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=4
08:16:24 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=4
08:16:25 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=4
08:16:25 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=4
08:16:26 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.016081406975947503}"
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2905.2887575942077}"
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=6.19805002213
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
get resource value 0.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
executed snippet estimated_duration=4.0, duration=6.21409416199
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
08:16:27 -- ******* Post Equilibration Finished *******
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2905.919853904902}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2905.817163415459}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2905.327718501367}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2905.007964506902}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.016081406975947503}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.437354935531}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.240377143825}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2903.95147935753}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2903.953282701456}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2903.6815150620323}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.016081406975947503}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2903.873372362724}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2903.7175797535683}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2903.7221733097495}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2903.8803998538006}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.0336034529428}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.016081406975947503}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.1260951599897}"
testing Ar40>2000.0
evaluate ot="Ar40.bs_corrected>2000.0" t="Ar40>2000.0", ctx="{'Ar40': 2904.55655634026}"
condition Ar40>2000.0 is true trips=1/1
08:16:43 -- Conditional tripped: Ar40.bs_corrected>2000.0 condition Ar40>2000.0 is True
08:16:43 -- truncation conditional condition Ar40>2000.0 is True. measurement iteration executed 20/400 counts
state changed from measurement to truncated
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :21.092
flush and close file /Users/jan/PychronDev/data/isotopes/67/1aa10b-c6af-4b5b-bd2f-24be68169a7f.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120.0}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/67/1aa10b-c6af-4b5b-bd2f-24be68169a7f.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02821323e+00]
H1 map mass to dac 34.2 >> 5.23973160773
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning 34.2 (5.23970075144) on H1
setting magnet DAC
current  : 5.877585
requested: 5.239701
Delta Dac: 0.637885
Checking detector protection. dv=0.63788
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.23970075144 ===>> OK
Magnet settling time: 0.500 0.500
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals pre_run_terminations
loading system conditionals None
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals None
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
Show conditionals active run: <pychron.experiment.automated_run.automated_run.AutomatedRun object at 0x1325a19b0>
Show conditionals measuring run: <pychron.experiment.automated_run.automated_run.AutomatedRun object at 0x1325a19b0>
active_run same as measuring_run: True
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120.0
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': -0.0772999936655025}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.2267070386883}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.224907533913}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.2159884150024}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.206357955499}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.2022941641485}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': -0.06011759718288715}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.1847604600976}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.1747086319465}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.167132023357}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.1576744165427}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.1479420486717}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': -0.005765481705800887}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.135857822704}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.133304015584}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.130216738327}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.126122931183}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.120885468569}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.021291098396264294}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 2904.121012571676}"
testing Ar40>2000.0
evaluate ot="Ar40.bs_corrected>2000.0" t="Ar40>2000.0", ctx="{'Ar40': 2904.5514737519466}"
condition Ar40>2000.0 is true trips=1/1
08:17:22 -- Conditional tripped: Ar40.bs_corrected>2000.0 condition Ar40>2000.0 is True
08:17:22 -- truncation conditional condition Ar40>2000.0 is True. measurement iteration executed 20/120 counts
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :21.088
flush and close file /Users/jan/PychronDev/data/isotopes/67/1aa10b-c6af-4b5b-bd2f-24be68169a7f.h5
activate_detectors ('H1', 'AX', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'isotope': 'Ar40'}
peak center: mean=2876.75131362 threshold=5.0
peak center started
setup peak center. detector=['H1', 'AX', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x131d266b0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x129d3b650>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x131d266b0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x129d3b650>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x12fcc9830>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x129d3b650>]
setting integration time = 0.524288
SetIntegrationTime 0.524288 ===>> OK
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02821323e+00]
H1 map mass to dac 39.9624 >> 5.87762
GetDeflection H1 ===>> 0
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals pre_run_terminations
loading system conditionals None
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals None
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
GetHighVoltage ===>> 4499.94659342336
loading queue conditionals post_run_terminations
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x1305bb590>
Show conditionals active run: <pychron.experiment.automated_run.automated_run.AutomatedRun object at 0x1325a19b0>
doing pc
Show conditionals measuring run: <pychron.experiment.automated_run.automated_run.AutomatedRun object at 0x1325a19b0>
starting peak center. center dac= 5.87758538725 step_width=0.001
active_run same as measuring_run: True
width = 0.001
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.87759 width=0.03000 (5.86259 - 5.89259)
Moving to starting dac 5.86258538725
setting magnet DAC
current  : 5.239701
requested: 5.862585
Delta Dac: 0.622885
Checking detector protection. dv=0.62288
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.86258538725 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Wait until signal near baseline. tol= 0.0748728105452. timeout= 10
Peak center failed to move to a baseline position
_do_sweep sm= 5.86258538725, em= 5.89258538725, stm= 0.001
calculated step values: start=5.86258538725, end=5.89258538725, width=0.001, nsteps=31.0
setting magnet DAC
current  : 5.862585
requested: 5.862585
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86258538725 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.862585
requested: 5.863620
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86361987001 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.863620
requested: 5.864654
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86465435276 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.864654
requested: 5.865689
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86568883552 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.865689
requested: 5.866723
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86672331828 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.866723
requested: 5.867758
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86775780104 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.867758
requested: 5.868792
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8687922838 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868792
requested: 5.869827
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86982676656 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.869827
requested: 5.870861
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87086124932 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.870861
requested: 5.871896
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87189573207 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871896
requested: 5.872930
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87293021483 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.872930
requested: 5.873965
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87396469759 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873965
requested: 5.874999
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87499918035 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.874999
requested: 5.876034
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87603366311 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876034
requested: 5.877068
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87706814587 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.877068
requested: 5.878103
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87810262863 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.878103
requested: 5.879137
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87913711138 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879137
requested: 5.880172
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88017159414 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.880172
requested: 5.881206
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8812060769 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.881206
requested: 5.882241
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88224055966 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.882241
requested: 5.883275
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88327504242 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.883275
requested: 5.884310
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88430952518 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884310
requested: 5.885344
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88534400794 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.885344
requested: 5.886378
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8863784907 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.886378
requested: 5.887413
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88741297345 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887413
requested: 5.888447
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88844745621 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.888447
requested: 5.889482
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88948193897 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.889482
requested: 5.890516
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89051642173 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890516
requested: 5.891551
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89155090449 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.891551
requested: 5.892585
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89258538725 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8698899964654103, 5.877615447367214, 5.8853408982690176], [2064.8923392850097, 2793.2656985478607, 2067.1038746715362], 5.8761124413551906, 2793.2656985478607)
Failed to find a valid peak. No peak greater than 1.0. max = 0.16007036022
new center pos Detector(H1) (Ar40) @ 5.87761544737
GetHighVoltage ===>> 4499.94659342336
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.8776500603
update mftable H1 Ar40 5.8776500603 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
sweep finished
locally archiving mftable
setting magnet DAC
current  : 5.892585
requested: 5.877615
Delta Dac: 0.014970
Checking detector protection. dv=0.01497
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87761544737 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
Failed to find a valid peak. No peak greater than 1.0. max = 0.16007036022
flush and close file /Users/jan/PychronDev/data/isotopes/67/1aa10b-c6af-4b5b-bd2f-24be68169a7f.h5
finished measure script
executed snippet estimated_duration=564.96, duration=160.898113012
jan_co2_whiff_400_120_large.py completed successfully
Measurement Finished
08:18:09 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
08:18:09 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.47955322266e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=4
08:18:09 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.406263828278
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
08:18:09 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end truncated
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
not connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-08-28T08:07:32',
                    'title': 'iServer Hum.',
                    'value': 51.4}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-08-28T08:17:34',
                     'title': None,
                     'value': 104.475},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-08-28T08:17:35',
                     'title': None,
                     'value': 105.99706}],
 'lab_temperatures': [{'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-08-28T03:54:24',
                       'title': 'iServer Temp.',
                       'value': 71.0},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-08-28T08:03:41',
                       'title': None,
                       'value': 18.0}]}
persistence save...
persistence save - db
post measurement save
5106935472 connecting to database sqlite://@/
connected to db sqlite://@/
create new session 5106935472
close session 5106935472
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 5023349840
MassSpec Database Version: 16.0
close session 5023349840
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to 65795
setting aliquot to 3
setting step to 
setting uuid to 671aa10b-c6af-4b5b-bd2f-24be68169a7f
setting irradpos to 65795
setting extract_device to Fusions CO2
setting tray to 
setting position to 4
setting power_requested to 4.5
setting extract_value to 4.5
setting duration to 30.0
setting duration_at_request to 30.0
setting first_stage_delay to 30.0
setting cleanup to 30.0
setting comment to C:18
setting irradiation to NM-291
setting level to C
setting irradiation_level to C
setting sample to 9-23-16A
setting material to DetritalSanidine
setting project to Bidouoche
setting mass_spectrometer to Jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment: C:18 %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x131f123d0> len t=20
baseline Ar41. v=-0.101043003259, e=0.00786976782809
get signal data Ar41 H2
Get data signal Ar41 0.198+/-0.016 len t=20
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x131f12150> len t=20
baseline Ar40. v=0.0211639952894, e=0.0195398571651
get signal data Ar40 H1
Get data signal Ar40 2904.6+/-0.4 len t=20
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x131f12a10> len t=20
baseline Ar39. v=0.0714653552421, e=0.012978407668
get signal data Ar39 AX
Get data signal Ar39 14.21+/-0.04 len t=20
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x131f12990> len t=20
baseline Ar38. v=-0.0300278740051, e=0.00428255042431
get signal data Ar38 L1
Get data signal Ar38 0.303+/-0.025 len t=20
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x131f12b10> len t=20
baseline Ar37. v=-0.00363000469831, e=0.0123913718069
get signal data Ar37 L2
Get data signal Ar37 0.05+/-0.05 len t=20
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x119a6e450> len t=20
baseline Ar36. v=0.000608214956445, e=8.25950664265e-05
get signal data Ar36 CDD
Get data signal Ar36 0.168+/-0.004 len t=20
65795-03 added analysis time 1.69514894485s
analysis added to mass spec database
mass spec save time= 1.706
persistence save - dvc
================= post measurement started
create new session 4935214768
close session 4935214768
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Failed to find a valid peak. No peak greater than 1.0. max = 0.16007036022
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - 95-03.json
add to repo msg=modified - 95-03.dat.json
add to repo msg=modified - 95-03.blan.json
add to repo msg=modified - 95-03.inte.json
add to repo msg=modified - 95-03.icfa.json
add to repo msg=modified - 95-03.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/IR984/657/tags/95-03.tags.json
add to repo msg=modified - 95-03.peak.json
add to repo msg=modified - 95-03.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/IR984/657/monitor/95-03.moni.json
commit message=<COLLECTION>
add to repo msg=modified - 95-03.inte.json
add to repo msg=modified - 95-03.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - 95-03.blan.json
commit message=<BLANKS> preceding bc-02-J-897
add to repo msg=modified - 95-03.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x13335e7d0>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4935214768
add association IR984
get identifier "65795"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x1343998d0>
close session 4935214768
================= post measurement finished
08:18:25 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
08:18:25 -- ******* Post Run Check Passed *******
08:18:25 -- Automated run 65795-03 truncated duration: 259.698 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=2
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.rem.txt
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.ex.txt
doing event level: 3
add run
